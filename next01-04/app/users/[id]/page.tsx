import { Suspense } from "react";
import { Metadata } from "next";
import { getAllUsers, getUser, getUserPosts } from "@/lib";
import { UserPosts } from "@/user/components";
import { notFound } from "next/navigation";
import Link from "next/link";

type Params = {
  params: {
    id: string;
  };
};

export const generateMetadata = async ({
  params: { id },
}: Params): Promise<Metadata> => {
  const user = await getUser(id);

  return {
    title: user ? `User ${user.name}` : "User not found",
    description: "Generated by create next app",
  };
};

const UserPage = async ({ params: { id } }: Params) => {
  const user = await getUser(id);

  if (!user?.name) {
    notFound();
  }

  const promisePosts = getUserPosts(id);

  return (
    <>
      {user ? (
        <div>
          <h1>{user.name}</h1>
          <h2>Posts</h2>
          <Suspense fallback={<h2>Loading...</h2>}>
            <UserPosts promisePosts={promisePosts} />
          </Suspense>
        </div>
      ) : (
        <div>
          <h1>User not found</h1>
        </div>
      )}
      <Link href="/users">Go Back</Link>
    </>
  );
};

export const generateStaticParams = async () => {
  const users = await getAllUsers();

  return users.map(({ id }) => ({
    id: id.toString(),
  }));
};

export default UserPage;
